version: "3.8"

services:
  postgres:
    image: postgres:15.4-alpine3.18
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  backend:
    # build:
    #   context: ./backend
    #   dockerfile: Dockerfile
    image: 9574872248/status
    container_name: go-backend
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      MAIL_DOMAIN: ${MAIL_DOMAIN}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
      MAIL_ENCRYPTION: ${MAIL_ENCRYPTION}
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      # - mailhog

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: react-frontend
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend

  # mailhog:
  #   image: "mailhog/mailhog:latest"
  #   ports:
  #     - "1025:1025"
  #     - "8025:8025"
volumes:
  postgres_data:
# /////////////////////////////////////
